#pragma once

#include <GLFW/glfw3.h>

enum KEYBOARD_ENUM
{
	KEYBOARD_0 = GLFW_KEY_0,
	KEYBOARD_1 = GLFW_KEY_1,
	KEYBOARD_2 = GLFW_KEY_2,
	KEYBOARD_3 = GLFW_KEY_3,
	KEYBOARD_4 = GLFW_KEY_4,
	KEYBOARD_5 = GLFW_KEY_5,
	KEYBOARD_6 = GLFW_KEY_6,
	KEYBOARD_7 = GLFW_KEY_7,
	KEYBOARD_8 = GLFW_KEY_8,
	KEYBOARD_9 = GLFW_KEY_9,

	KEYBOARD_A = GLFW_KEY_A,
	KEYBOARD_B = GLFW_KEY_B,
	KEYBOARD_C = GLFW_KEY_C,
	KEYBOARD_D = GLFW_KEY_D,
	KEYBOARD_E = GLFW_KEY_E,
	KEYBOARD_F = GLFW_KEY_F,
	KEYBOARD_G = GLFW_KEY_G,
	KEYBOARD_H = GLFW_KEY_H,
	KEYBOARD_I = GLFW_KEY_I,
	KEYBOARD_J = GLFW_KEY_J,
	KEYBOARD_K = GLFW_KEY_K,
	KEYBOARD_L = GLFW_KEY_L,
	KEYBOARD_M = GLFW_KEY_M,
	KEYBOARD_N = GLFW_KEY_N,
	KEYBOARD_O = GLFW_KEY_O,
	KEYBOARD_P = GLFW_KEY_P,
	KEYBOARD_Q = GLFW_KEY_Q,
	KEYBOARD_R = GLFW_KEY_R,
	KEYBOARD_S = GLFW_KEY_S,
	KEYBOARD_T = GLFW_KEY_T,
	KEYBOARD_U = GLFW_KEY_U,
	KEYBOARD_V = GLFW_KEY_V,
	KEYBOARD_W = GLFW_KEY_W,
	KEYBOARD_X = GLFW_KEY_X,
	KEYBOARD_Y = GLFW_KEY_Y,
	KEYBOARD_Z = GLFW_KEY_Z,

	KEYBOARD_F1 = GLFW_KEY_F1,
	KEYBOARD_F2 = GLFW_KEY_F2,
	KEYBOARD_F3 = GLFW_KEY_F3,
	KEYBOARD_F4 = GLFW_KEY_F4,
	KEYBOARD_F5 = GLFW_KEY_F5,
	KEYBOARD_F6 = GLFW_KEY_F6,
	KEYBOARD_F7 = GLFW_KEY_F7,
	KEYBOARD_F8 = GLFW_KEY_F8,
	KEYBOARD_F9 = GLFW_KEY_F9,
	KEYBOARD_F10 = GLFW_KEY_F10,
	KEYBOARD_F11 = GLFW_KEY_F11,
	KEYBOARD_F12 = GLFW_KEY_F12,

	KEYBOARD_RIGHT = GLFW_KEY_RIGHT,
	KEYBOARD_LEFT = GLFW_KEY_LEFT,
	KEYBOARD_DOWN = GLFW_KEY_DOWN,
	KEYBOARD_UP = GLFW_KEY_UP,

	//KEYBOARD_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET,
	//KEYBOARD_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET,
	//KEYBOARD_SEMICOLON = GLFW_KEY_SEMICOLON,

	//KEYBOARD_SPACE = GLFW_KEY_SPACE,
	//KEYBOARD_ESC = GLFW_KEY_ESCAPE,
	//KEYBOARD_TAB = GLFW_KEY_TAB,

	//KEYBOARD_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT,
	//KEYBOARD_RIGHT_ALT = GLFW_KEY_RIGHT_ALT,
	//KEYBOARD_RIGHT_CTRL = GLFW_KEY_RIGHT_CONTROL,

};

class Keyboard
{
public:
	GLFWwindow* context;
	Keyboard()
	{
		updateContext();
	}

	void updateContext()
	{
		GLFWwindow* context = glfwGetCurrentContext();
	}

	bool getKeyboard_Press(KEYBOARD_ENUM key)
	{
		if (glfwGetKey(context, key) == GLFW_PRESS)
			return true;
	}

	bool getKeyboard_Release(KEYBOARD_ENUM key)
	{
		if (glfwGetKey(context, key) == GLFW_RELEASE)
			return true;
	}
};